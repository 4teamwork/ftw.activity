<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:meta="http://namespaces.zope.org/meta"
    xmlns:profilehook="http://namespaces.zope.org/profilehook"
    i18n_domain="ftw.activity">

    <include package="ftw.profilehook" />

    <five:registerPackage package="." initialize=".initialize" />
    <i18n:registerTranslations directory="locales" />
    <meta:provides feature="ftw-activity-2" />

    <include package=".browser" />
    <include package=".catalog" />
    <include package=".portlets" />

    <browser:resourceDirectory
        name="ftw.activity"
        directory="resources" />

    <genericsetup:registerProfile
        name="default"
        title="ftw.activity"
        directory="profiles/default"
        provides="Products.GenericSetup.interfaces.EXTENSION"
        />
    <include package=".upgrades" />

    <profilehook:hook
        profile="ftw.activity:default"
        handler=".hooks.installed"
        />

    <genericsetup:registerProfile
        name="uninstall"
        title="ftw.activity"
        directory="profiles/uninstall"
        provides="Products.GenericSetup.interfaces.EXTENSION"
        for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"
        />

    <profilehook:hook
        profile="ftw.activity:uninstall"
        handler=".hooks.uninstalled"
        />

    <adapter factory=".filters.FilterCloseChanges"
             name="ftw.activity:filter-close-changes" />

    <subscriber
        for="*
             Products.DCWorkflow.interfaces.IAfterTransitionEvent"
        handler=".subscribers.make_object_transition_activity"
        />

    <subscriber
        for="*
             OFS.interfaces.IObjectClonedEvent"
        handler=".subscribers.make_object_added_activity"
        />

    <!-- archetypes -->
    <subscriber
        for="Products.Archetypes.interfaces.IBaseObject
             Products.Archetypes.interfaces.IObjectInitializedEvent"
        handler=".subscribers.make_object_added_activity"
        />

    <subscriber
        for="Products.Archetypes.interfaces.IBaseObject
             Products.Archetypes.interfaces.IObjectEditedEvent"
        handler=".subscribers.make_object_changed_activity"
        />

    <subscriber
        for="Products.Archetypes.interfaces.IBaseObject
             zope.container.interfaces.IObjectRemovedEvent"
        handler=".subscribers.make_object_deleted_activity"
        />

    <subscriber
        for="Products.Archetypes.interfaces.IBaseObject
             zope.lifecycleevent.interfaces.IObjectMovedEvent"
        handler=".subscribers.make_object_moved_activity"
        />

    <!-- dexterity -->
    <subscriber
        for="plone.dexterity.interfaces.IDexterityContent
             zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".subscribers.make_object_added_activity"
        />

    <subscriber
        for="plone.dexterity.interfaces.IDexterityContent
             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".subscribers.make_object_changed_activity"
        />

    <subscriber
        for="plone.dexterity.interfaces.IDexterityContent
             zope.lifecycleevent.interfaces.IObjectRemovedEvent"
        handler=".subscribers.make_object_deleted_activity"
        />

    <subscriber
        for="plone.dexterity.interfaces.IDexterityContent
             zope.lifecycleevent.interfaces.IObjectMovedEvent"
        handler=".subscribers.make_object_moved_activity"
        />

    <!-- plone.app.discussion -->
    <subscriber
        for="*
             plone.app.discussion.interfaces.ICommentAddedEvent"
        handler=".subscribers.make_comment_added_activity"
        />
    <subscriber
        for="*
             plone.app.discussion.interfaces.IReplyAddedEvent"
        handler=".subscribers.make_comment_added_activity"
        />

    <subscriber
        for="*
             plone.app.discussion.interfaces.ICommentRemovedEvent"
        handler=".subscribers.make_comment_removed_activity"
        />

    <subscriber
        for="*
             plone.app.discussion.interfaces.IReplyRemovedEvent"
        handler=".subscribers.make_comment_removed_activity"
        />

</configure>
